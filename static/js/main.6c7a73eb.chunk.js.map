{"version":3,"sources":["components/App.js","index.js"],"names":["api","App","useState","weather","setWeather","localization","setLocalization","gate","message","cityNameError","setCityNameError","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","response","json","data","cod","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateConstructor","Date","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGMA,EACC,mCADDA,EAEE,2CAgGOC,MA7Ff,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0CJ,mBAAS,CACjDK,MAAM,EACNC,QAAS,KAFX,mBAAOC,EAAP,KAAsBC,EAAtB,KAiDA,OACE,qBACEC,UACyB,oBAAhBR,EAAQS,MACXT,EAAQS,KAAKC,KAAO,GAClB,WAEF,MANR,SASE,sBAAKF,UAAU,UAAf,UACE,qBAAKA,UAAU,cAAf,SACE,uBACEG,KAAK,OACLC,YAAY,UACZC,SAAU,SAACC,GAAD,OAAOX,EAAgBW,EAAEC,OAAOC,QAC1CC,WApCK,SAACH,GACA,UAAVA,EAAEI,KACJC,MAAM,GAAD,OACAtB,EADA,qBACqBK,EADrB,+BACwDL,IAE1DuB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACY,QAAbA,EAAKC,KACPjB,EAAiB,CAAEH,MAAM,EAAMC,QAASkB,EAAKlB,UAC7CJ,EAAW,IACXE,EAAgB,MAEhBI,EAAiB,CAAEH,MAAM,EAAOC,QAASkB,EAAKlB,UAC9CJ,EAAWsB,GACXpB,EAAgB,SAuBhBa,MAAOd,MAGa,oBAAhBF,EAAQS,MACO,UAAvBH,EAAcF,KACZ,sBAAKI,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,iCACGR,EAAQyB,KADX,KACmBzB,EAAQ0B,IAAIC,WAE/B,+BAvEY,SAACC,GACvB,IAUIC,EAVO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAAQL,EAAEM,WAAa,EACvBC,EAAOP,EAAEQ,cAOb,OANIL,EAAO,KACTA,EAAI,WAAOA,IAETE,EAAQ,KACVA,EAAK,WAAOA,IAER,GAAN,OAAUJ,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAkDjBE,CAAgB,IAAIC,WAE7B,sBAAK9B,UAAU,cAAf,UACE,+BAAO+B,KAAKC,MAAMxC,EAAQS,KAAKC,MAAQ,UACvC,+BAAOV,EAAQA,QAAQ,GAAGS,aAG5B,MACoB,IAAvBH,EAAcF,KAAgB,6BAAKE,EAAcD,UAAgB,WC1F1EoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6c7a73eb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"../style/App.scss\";\nconst api = {\n  key: \"77b4d55b2c32af78427d9b3d2b5c9c50\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [weather, setWeather] = useState(\"\");\n  const [localization, setLocalization] = useState(\"\");\n  const [cityNameError, setCityNameError] = useState({\n    gate: false,\n    message: \"\",\n  });\n\n  const dateConstructor = (d) => {\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = d.getMonth() + 1;\n    let year = d.getFullYear();\n    if (date < 10) {\n      date = `0${date}`;\n    }\n    if (month < 10) {\n      month = `0${month}`;\n    }\n    return `${day} ${date}.${month}.${year}`;\n  };\n\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      fetch(\n        `${api.base}weather?q=${localization}&units=metric&APPID=${api.key}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.cod === \"404\") {\n            setCityNameError({ gate: true, message: data.message });\n            setWeather(\"\");\n            setLocalization(\"\");\n          } else {\n            setCityNameError({ gate: false, message: data.message });\n            setWeather(data);\n            setLocalization(\"\");\n          }\n        });\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp < 16\n            ? \"App cold\"\n            : \"App\"\n          : \"App\"\n      }\n    >\n      <div className=\"wrapper\">\n        <div className=\"searchSpace\">\n          <input\n            type=\"text\"\n            placeholder=\"City...\"\n            onChange={(e) => setLocalization(e.target.value)}\n            onKeyPress={search}\n            value={localization}\n          />\n        </div>\n        {typeof weather.main != \"undefined\" ||\n        cityNameError.gate === \"false\" ? (\n          <div className=\"informationBox\">\n            <div className=\"locationInfo\">\n              <span>\n                {weather.name}, {weather.sys.country}\n              </span>\n              <span>{dateConstructor(new Date())}</span>\n            </div>\n            <div className=\"weatherInfo\">\n              <span>{Math.round(weather.main.temp) + \"Â°C\"}</span>\n              <span>{weather.weather[0].main}</span>\n            </div>\n          </div>\n        ) : null}\n        {cityNameError.gate === true ? <h1>{cityNameError.message}</h1> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}